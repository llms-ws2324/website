---
title: "Syllabus"
---


## Course info

|           | Day       | Time              | Location |
|-----------|-----------|-------------------|----------|
| Kick-off   | 25.09.-27.09    | 09:00  - 17:00  |  S205  |
| Lecture   |  Monday   | 11:45  - 13:15  |  S205  |


![](/images/room.png)

Nobelstra√üe 10, 70569 Stuttgart, [Room S205](https://www.hdm-stuttgart.de/horst) (second floor)

## Learning objectives

The course Large Language Model applications focuses on exploring and realizing the potential of LLMs (e.g., GPT from OpenAI) to automate various business tasks. In particular, we will investigate how LLMs can be used to automate routine tasks such as composing emails and creating reports. However, you can also work on applications related to customers (e.g. customer service chatbot).   

By the end of the semester, you will be able to use popular frameworks like Hugging Face, OpenAI Models, LangChain, Microsoft Kernel and Gradio to build LLM applications


## Where to get help

- If you have a question during lecture, feel free to ask it! 
- Outside of class, any general questions about course content or assignments should be posted on the Moodle course forum.
- Emails should be reserved for questions not appropriate for the public forum. **If you email me, please include the name of our course in the subject line.** 

Check out the [Support](course-support.qmd) page for more resources.


## Lectures

A lot of what you do in this course will involve writing code, and coding is a skill that is best learned by doing.
Therefore, as much as possible, you will be working on a variety of tasks and activities throughout each lecture.

You are expected to bring a laptop to each class so that you can take part in the in-class exercises.


## Teams

You will be assigned to a team at the beginning of the semester.

All team members are expected to contribute equally to the completion of the project and you will be asked to evaluate your team members throughout the semester. Failure to adequately contribute to an assignment will result in a penalty to your mark relative to the team's overall mark.

You are expected to make use of the provided GitHub repository as the central collaborative platform. [Commits](https://github.com/git-guides/git-commit) to this repository will be used as a metric (one of several) of each team member's relative contribution for each project.

## Assessment

Assessment for the course is comprised of two components:

- Acquisition of a skill badge (ungraded)
- Project


### Skill badge

Earn a Google Cloud skill badge by completing the [Introduction to Generative AI, Introduction to Large Language Models and Introduction to Responsible AI](https://www.cloudskillsboost.google/course_templates/556) courses. 

By passing the final quiz, you'll demonstrate your understanding of foundational concepts in generative AI.

A skill badge is a digital badge issued by Google Cloud in recognition of your knowledge of Google Cloud products and services. 

### Project

The purpose of the project is to build and present a LLM application. The project will be completed in teams.

:::{.callout-note}
Take a look at the [project description](project-description.qmd) for a more detailed explanation of the grading criterias
:::


### Grade

The final course grade will be calculated as follows:


| Criteria & Sub-Criteria                                   | Exceptional      | Proficient       | Basic            | Needs Improvement |
|-----------------------------------------------------------|------------------|------------------|------------------|------------------|
| **Use Case Identification**                               |                  |                  |                  |                  |
| 1. Relevance and Originality                              | 8-10 points      | 5-7 points       | 3-4 points       | 0-2 points       |
| 2. Clear Definition and Scope                             | 8-10 points      | 5-7 points       | 3-4 points       | 0-2 points       |
| **Application Development**                               |                  |                  |                  |                  |
| 3. Code Quality and Organization                          | 8-10 points      | 5-7 points       | 3-4 points       | 0-2 points       |
| 4. Algorithm Implementation and Efficiency                | 12-15 points     | 8-11 points      | 4-7 points       | 0-3 points       |
| 5. Error Handling and Robustness                          | 8-10 points      | 5-7 points       | 3-4 points       | 0-2 points       |
| 6. Integration of AI                                      | 4-5 points       | 3 points         | 1-2 points       | 0 points         |
| **User Interface (UI)**                                   |                  |                  |                  |                  |
| 7. Design and Aesthetics                                  | 8-10 points      | 5-7 points       | 3-4 points       | 0-2 points       |
| 8. Usability and Interaction                              | 8-10 points      | 5-7 points       | 3-4 points       | 0-2 points       |
| **Documentation and Presentation**                        |                  |                  |                  |                  |
| 9. Project Documentation                                  | 8-10 points      | 5-7 points       | 3-4 points       | 0-2 points       |
| 10. Presentation and Communication                         | 8-10 points      | 5-7 points       | 3-4 points       | 0-2 points       |


The final grade will be determined based on the following thresholds:

|  Grade       | Final Course Grade |
|--------------|--------------------|
| 1.0           | 96 - 100          |
| 1.3           | 91 - 95           |
| 1.7           | 85 - 90           |
| 2.0           | 80 - 84           |
| 2.3           | 75 - 79           |
| 2.7           | 70 - 74           |
| 3.0           | 65 - 69           |
| 3.3           | 60 - 64           |
| 3.7           | 55 - 59           |
| 4.0            | 50 - 54          |
| 4.7           | 15 - 49           |
| 5.0            | 0 - 14           |



## Course policies

### Academic integrity

**TL;DR: Don't cheat!**

All students must adhere to the academic integrity standard. Students affirm their commitment to uphold the values by signing a pledge that states:

-   I will not lie, cheat, or steal in my academic endeavors;
-   I will conduct myself honorably in all my endeavors;
-   I will act if the standard is compromised

Regardless of the course delivery format, it is your responsibility to understand and follow HdM policies regarding academic integrity, including doing one's own work, following proper citation of sources, and adhering to guidance around group work projects.
